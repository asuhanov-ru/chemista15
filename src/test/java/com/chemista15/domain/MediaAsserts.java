package com.chemista15.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MediaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMediaAllPropertiesEquals(Media expected, Media actual) {
        assertMediaAutoGeneratedPropertiesEquals(expected, actual);
        assertMediaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMediaAllUpdatablePropertiesEquals(Media expected, Media actual) {
        assertMediaUpdatableFieldsEquals(expected, actual);
        assertMediaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMediaAutoGeneratedPropertiesEquals(Media expected, Media actual) {
        assertThat(expected)
            .as("Verify Media auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMediaUpdatableFieldsEquals(Media expected, Media actual) {
        assertThat(expected)
            .as("Verify Media relevant properties")
            .satisfies(e -> assertThat(e.getUuid()).as("check uuid").isEqualTo(actual.getUuid()))
            .satisfies(e -> assertThat(e.getFileName()).as("check fileName").isEqualTo(actual.getFileName()))
            .satisfies(e -> assertThat(e.getFileType()).as("check fileType").isEqualTo(actual.getFileType()))
            .satisfies(e -> assertThat(e.getFileDesc()).as("check fileDesc").isEqualTo(actual.getFileDesc()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMediaUpdatableRelationshipsEquals(Media expected, Media actual) {
        assertThat(expected)
            .as("Verify Media relationships")
            .satisfies(e -> assertThat(e.getCollection()).as("check collection").isEqualTo(actual.getCollection()));
    }
}
